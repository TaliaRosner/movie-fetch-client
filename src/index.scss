/* =========
   Global styles for MovieFetch
   ========= */

:root {
  --bg: #0d1117;
  --panel: #161b22;
  --border: #272c36;
  --text: #e6edf3;
  --muted: #a2a9b3;
  --accent: #7cc8ff;
}

*,
*::before,
*::after {
  box-sizing: border-box;
}

html,
body,
#root {
  height: 100%;
}

body {
  margin: 0;
  font-family: system-ui, -apple-system, "Segoe UI", Roboto, Helvetica, Arial,
    sans-serif;
  line-height: 1.5;
  color: var(--text);
  background: linear-gradient(180deg, var(--bg), #0b0f14);
}

a {
  color: var(--accent);
  text-decoration: none;
}
a:hover {
  text-decoration: underline;
}

.app {
  max-width: 1100px;
  margin: 0 auto;
  padding: 24px;
}

/* Headings & spacing */
h1,
h2,
h3 {
  margin: 0 0 12px;
  line-height: 1.2;
}
p {
  margin: 0 0 12px;
  color: var(--muted);
}

hr {
  border: 0;
  border-top: 1px solid var(--border);
  margin: 24px 0;
}

/* Buttons used in MovieView back button, etc. */
button {
  appearance: none;
  border: 1px solid var(--border);
  background: var(--panel);
  color: var(--text);
  padding: 8px 14px;
  border-radius: 10px;
  cursor: pointer;
  transition: border-color 0.15s, transform 0.06s ease;
}
button:hover {
  border-color: #334153;
}
button:active {
  transform: translateY(1px);
}

/* Images inside views/cards */
img {
  max-width: 100%;
  height: auto;
  border-radius: 8px;
  display: block;
}

/* Optional responsive grid:
   If you later wrap your list of cards with <div className="cards">...</div>
   this will lay them out nicely. */
.cards {
  display: grid;
  grid-template-columns: repeat(auto-fill, minmax(220px, 1fr));
  gap: 16px;
}

/* A light “card” look you can opt into by adding className="movie-card"
   to your MovieCard’s wrapper someday (doesn’t affect current inline styles). */
.movie-card {
  background: var(--panel);
  border: 1px solid var(--border);
  border-radius: 12px;
  padding: 12px;
  transition: transform 0.08s ease, border-color 0.15s ease;
}
.movie-card:hover {
  transform: translateY(-2px);
  border-color: #334153;
}
